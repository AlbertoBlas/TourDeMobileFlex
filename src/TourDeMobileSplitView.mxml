<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:views="views.*"
			   applicationDPI="240"
			   splashScreenImage="@Embed('icons/tdfsplash.png')"
			   resizeForSoftKeyboard="true"			   
			   creationComplete="creationCompleteHandler(event)">
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		
		@media (os-platform: "iOS") {
			s|ActionBar {
				defaultButtonAppearance: beveled;
			}
			s|ActionBar.beveled s|Group#navigationGroup s|Button {
				/* use the rounded button instead of the arrow button */
				skinClass: ClassReference("spark.skins.mobile.BeveledActionButtonSkin");
			}    
		}
	</fx:Style>

	<fx:Script>
		<![CDATA[
			import events.ShowViewEvent;
			import events.ViewNavigatorEvent;
			
			import mx.events.FlexEvent;
			
			import spark.components.Button;
			import spark.components.Label;
			
			public function viewChanged(event:ViewNavigatorEvent):void
			{
				if ((event != null) && (event.view != null) && (event.view.data != null))
				{
					if ((event.view.data is SampleItem) && (!(event.view.data is SampleCategory)))
					{
						ping(event.view.data as SampleItem);
					}
				}
			}
			
			protected function ping(sampleItem:SampleItem):void
			{
				// annonymously ping the tdf server about the sample being viewed
				var urlVariables:URLVariables = new URLVariables();
				urlVariables.Request = "logView";
				urlVariables.ObjectId = sampleItem.uid;
				
				var urlRequest:URLRequest = new URLRequest("http://tourdeflex.adobe.com/server/main.php");
				urlRequest.method = URLRequestMethod.POST;
				urlRequest.data = urlVariables;
				
				var urlLoader:URLLoader = new URLLoader();
				urlLoader.addEventListener(IOErrorEvent.IO_ERROR, function(event:IOErrorEvent):void {
					// ignore
				});
				urlLoader.load(urlRequest);
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				this.addEventListener(ShowViewEvent.SHOW_VIEW, showView);
			}
			
			protected function showView(event:ShowViewEvent):void
			{
				if (splitView.viewNavigator.length>0)
					splitView.viewNavigator.popAll();
				
				splitView.viewNavigator.pushView(event.view, event.data);
			}			
		]]>
	</fx:Script>	
	
	<views:SplitView id="splitView" width="100%" height="100%"  viewChanged="viewChanged(event)" />
</s:Application>
